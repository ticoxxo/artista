{"ast":null,"code":"import _objectWithoutProperties from \"/Users/ticoxxo/Documents/Tutorial/React/artista/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ticoxxo/Documents/Tutorial/React/artista/src/Navbar.js\";\n\nimport React from \"react\";\nimport { Link, useMatch, useResolvedPath } from 'react-router-dom';\n\nvar Navbar = function Navbar() {\n  return /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"nav\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    className: \"nav-tite\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }\n  }, \"Francisco Carden\\xE1s\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CustomLink, {\n    to: \"/gallery\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, \"Gallery\"), /*#__PURE__*/React.createElement(CustomLink, {\n    to: \"/about\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, \"About\")));\n};\n\nfunction CustomLink(_ref) {\n  var to = _ref.to,\n      children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"to\", \"children\"]);\n\n  var resolvedPath = useResolvedPath(to);\n  var isActive = useMatch({\n    path: resolvedPath.pathname,\n    end: true\n  });\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: isActive ? \"active\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, Object.assign({\n    to: to\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }), children));\n}\n\nexport default Navbar;","map":{"version":3,"sources":["/Users/ticoxxo/Documents/Tutorial/React/artista/src/Navbar.js"],"names":["React","Link","useMatch","useResolvedPath","Navbar","CustomLink","to","children","props","resolvedPath","isActive","path","pathname","end"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAmB,OAAnB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,eAAzB,QAAgD,kBAAhD;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACjB,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAa,IAAA,SAAS,EAAC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,eAEA,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFA,CAJJ,CADJ;AAWH,CAZD;;AAcA,SAASC,UAAT,OAA+C;AAAA,MAAzBC,EAAyB,QAAzBA,EAAyB;AAAA,MAArBC,QAAqB,QAArBA,QAAqB;AAAA,MAATC,KAAS;;AAC3C,MAAMC,YAAY,GAAGN,eAAe,CAACG,EAAD,CAApC;AACA,MAAMI,QAAQ,GAAGR,QAAQ,CAAC;AAAES,IAAAA,IAAI,EAAEF,YAAY,CAACG,QAArB;AAA+BC,IAAAA,GAAG,EAAE;AAApC,GAAD,CAAzB;AACA,sBACI;AAAI,IAAA,SAAS,EAAKH,QAAQ,GAAG,QAAH,GAAc,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAEJ;AAAV,KAAkBE,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACMD,QADN,CADJ,CADJ;AAOH;;AAED,eAAeH,MAAf","sourcesContent":["import React  from \"react\";\nimport { Link, useMatch, useResolvedPath } from 'react-router-dom';\n\nconst Navbar = () => {\n    return(\n        <nav className=\"nav\">\n            <Link to=\"/\" className=\"nav-tite\">\n                Francisco Carden√°s\n            </Link>\n            <ul>\n            <CustomLink to=\"/gallery\">Gallery</CustomLink>\n            <CustomLink to=\"/about\">About</CustomLink>\n            </ul>\n        </nav>\n    )\n}\n\nfunction CustomLink({ to, children,...props }) {\n    const resolvedPath = useResolvedPath(to);\n    const isActive = useMatch({ path: resolvedPath.pathname, end: true });\n    return (\n        <li className = { isActive ? \"active\" : \"\"}>\n            <Link to={to} {...props}>\n                { children }\n            </Link>\n        </li>\n    )\n}\n\nexport default Navbar;"]},"metadata":{},"sourceType":"module"}